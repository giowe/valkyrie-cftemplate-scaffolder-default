Description: 'ApiGateway'

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  ApiGatewayDescription:
    Description: ApiGateway function description
    Type: String
    Default: 'ApiGateway default description'

  ParentLambdaStack:
    Description: Parent lambda stack
    Type: String

Resources:

  RestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Description: !Ref ApiGatewayDescription
      Name: !Ref EnvironmentName

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName:
        'Fn::ImportValue': !Sub '${ParentLambdaStack}-Lambda'
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Join ['',['arn:aws:execute-api:', !Ref 'AWS:Region', ':', !Ref 'AWS::AccountId', ':', !Ref RestApi, ':/*/*/*']]

  Resource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: '{proxy+}'
      RestApiId: !Ref RestApi

  Method:
    Type: "AWS::ApiGateway::Method"
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: 'ANY'
      OperationName: 'Valkyrie proxy'
      RequestParameters:
        'method.request.path.proxy': true
      ResourceId: !Ref Resource
      RestApiId: !Ref RestApi
      Integration:
        CacheKeyParameters:
          - 'method.request.path.proxy'
        IntegrationHttpMethod: 'POST'
        IntegrationResponses:
          ResponseTemplates:
            'application/json': '{}'
          StatusCode: 200
        PassthroughBehavior: 'WHEN_NO_MATCH'
        RequestParameters:
          'integration.request.path.proxy': 'method.request.path.proxy'
        Type: 'AWS_PROXY'
        Uri: !Sub
          - arn:aws:apigateway:${AWS:Region}:lambda:path/2015-03-31/functions/${Lambda}/invocations
          - { Lambda: 'Fn::ImportValue': !Sub '${ParentLambdaStack}-Lambda' }

  Deployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      Description: !Ref ApiGatewayDescription
      RestApiId: !Ref RestApi
      StageName: !Ref EnvironmentName

Outputs:
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'

  RestApi:
    Description: 'ApiGateway rest api'
    Value: !Ref RestApi
    Export:
      Name: !Sub '${AWS::StackName}-RestApi'